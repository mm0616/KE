{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,qBAAqB,6CAAW;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mEAA6B;AACrF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qEAA8B;AACtF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,o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,yCAAyC;AAC1E,iCAAiC,yCAAyC;AAC1E,iCAAiC,yCAAyC;AAC1E,iCAAiC,yCAAyC;AAC1E;AACA;AACA,UAAU;AACV,uBAAuB,KAAK;AAC5B,gCAAgC;AAChC,uBAAuB,IAAI;AAC3B,oCAAoC;AACpC,UAAU;AACV;AACA;AACA,UAAU;AACV,oBAAoB;AACpB,mCAAmC;AACnC,mCAAmC;AACnC,oBAAoB;AACpB,UAAU;AACV;AACA;AACA,UAAU;AACV,kCAAkC;AAClC,mBAAmB,IAAI;AACvB,YAAY;AACZ,iCAAiC;AACjC,qBAAqB,IAAI;AACzB,cAAc;AACd,8CAA8C;AAC9C,wBAAwB;AACxB,cAAc;AACd,YAAY;AACZ,UAAU;AACV;AACA,qDAAqD,KAAK;AAC1D,YAAY;AACZ,gCAAgC;AAChC,YAAY;AACZ,oBAAoB;AACpB;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD;AAClD;AACA;AACO;AACP;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB,OAAO;AAC3B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB;AACrB;;;;;;;;;;;;;;;ACxjHA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGP;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;;;AClBwC;AACwB;AACA;AACb;AACE;AACZ;AACzC;AACA;AACA,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,KAAK,+CAAK;AACpC,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,SAAS,qDAAW;AAC9C;AACA;AACA,cAAc,gDAAc,EAAE,0CAAM;AACpC;AACA;AACA,cAAc,iDAAe,WAAW,kDAAU,E","sources":["webpack://mixly-lib-keyes-starter-kit/./src/blocks/block.js","webpack://mixly-lib-keyes-starter-kit/./src/generators/generator.js","webpack://mixly-lib-keyes-starter-kit/./src/language/en.js","webpack://mixly-lib-keyes-starter-kit/./src/language/zh-hans.js","webpack://mixly-lib-keyes-starter-kit/./src/language/zh-hant.js","webpack://mixly-lib-keyes-starter-kit/external var \"Blockly\"","webpack://mixly-lib-keyes-starter-kit/webpack/bootstrap","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/compat get default export","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/define property getters","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/global","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/hasOwnProperty shorthand","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/make namespace object","webpack://mixly-lib-keyes-starter-kit/webpack/runtime/publicPath","webpack://mixly-lib-keyes-starter-kit/./src/index.js"],"sourcesContent":["import * as Blockly from 'blockly/core';\r\n\r\n//////////////////颜色/////////////////////\r\nconst KIT_HUE = 120;\r\n\r\n\r\n/********************************************\r\n           //Arduino基础学习套件//\r\n                //数字输出//\r\n*********************************************/\r\n\r\n/********************************************\r\n                  *LED灯*\r\n*********************************************/\r\nexport const basic_led1 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_LED1)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_led1.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\nexport const basic_led2 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_LED2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_led2.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\nexport const basic_led3 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_LED3)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_led3.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const basic_led4 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_LED4)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_led4.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n/********************************************\r\n                 *PWM输出*\r\n*********************************************/\r\nexport const basic_a_Write = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_analog)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_pwm.png\"), 60, 32))\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"num\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_VALUE2)\r\n            .setCheck(Number);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_INOUT_ANALOG_WRITE);\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *rgb LED*\r\n*********************************************/\r\n\r\n\r\nexport const basic_rgb01 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(\"RGB\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_rgb.png\"), 43, 32));\r\n        this.appendValueInput(\"R\", Number)\r\n            .appendField(\"R\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"r\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"R(0~255):\");\r\n        this.appendValueInput(\"G\", Number)\r\n            .appendField(\"G\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"g\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"G(0~255):\");\r\n        this.appendValueInput(\"B\", Number)\r\n            .appendField(\"B\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"b\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"B(0~255):\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *有源蜂鸣器*\r\n*********************************************/\r\nexport const basic_y_buzzer = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_BUZZER1)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_buzzer.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *无源蜂鸣器*\r\n*********************************************/\r\nexport const basic_w_buzzer1 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_pbuzzer.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//////////////////蜂鸣器//////////////////\r\nvar TONE_NOTES = [\r\n    [\"NOTE_C3\", \"131\"], [\"NOTE_D3\", \"147\"], [\"NOTE_E3\", \"165\"], [\"NOTE_F3\", \"175\"], [\"NOTE_G3\", \"196\"], [\"NOTE_A3\", \"220\"], [\"NOTE_B3\", \"247\"],\r\n    [\"NOTE_C4\", \"262\"], [\"NOTE_D4\", \"294\"], [\"NOTE_E4\", \"330\"], [\"NOTE_F4\", \"349\"], [\"NOTE_G4\", \"392\"], [\"NOTE_A4\", \"440\"], [\"NOTE_B4\", \"494\"],\r\n    [\"NOTE_C5\", \"532\"], [\"NOTE_D5\", \"587\"], [\"NOTE_E5\", \"659\"], [\"NOTE_F5\", \"698\"], [\"NOTE_G5\", \"784\"], [\"NOTE_A5\", \"880\"], [\"NOTE_B5\", \"988\"]\r\n];\r\n\r\n\r\nexport const basic_tone = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown(TONE_NOTES), 'STAT');\r\n        this.setOutput(true, Number);\r\n    }\r\n};\r\n\r\nexport const basic_w_buzzer2 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_pbuzzer.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\nexport const basic_w_buzzer3 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_pbuzzer.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.appendValueInput('DURATION')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DURATION);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *电机*\r\n*********************************************/\r\nexport const basic_motor = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_MOTOR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_motor.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"HIGH\"], [Blockly.Msg.MIXLY_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n/********************************************\r\n                  数字传感器\r\n                  *火焰传感*\r\n*********************************************/\r\nexport const basic_flame = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_FLAME)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_fire.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Boolean);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *按键开关*\r\n*********************************************/\r\nexport const basic_button = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_BUTTON)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_button.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Boolean);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *倾斜开关*\r\n*********************************************/\r\nexport const basic_tilt = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_TILT)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_qingxie.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Boolean);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n/********************************************\r\n                  模拟传感器\r\n                  *模拟温度*\r\n*********************************************/\r\nexport const basic_analog_t = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_ANALOG_T)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_temp.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n/********************************************\r\n                  *光线传感*\r\n*********************************************/\r\nexport const basic_light = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_LIGHT)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_guangmin.png\"), 37, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n/********************************************\r\n                  *电位器*\r\n*********************************************/\r\nexport const basic_potentiometer = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_POTENTIOMETER)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_dianweiqi.png\"), 37, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n/********************************************\r\n                 显示屏\r\n              *1位数码管*\r\n*********************************************/\r\nexport const basic_seg1 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_SMG)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_1seg.png\"), 37, 32));\r\n\r\n        this.appendValueInput(\"num\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_basic_value);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n/********************************************\r\n                  *4位数码管*\r\n*********************************************/\r\nexport const basic_seg4 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_4seg.png\"), 37, 32));\r\n\r\n        this.appendValueInput(\"num\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_basic_value);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n\r\n/********************************************\r\n                  *1602LCD*\r\n*********************************************/\r\nexport const basic_1602lcd = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(\"LCD1602\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_lcd1602.png\"), 70, 32));\r\n        this.appendValueInput(\"TEXT1\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT1);\r\n        this.appendValueInput(\"TEXT2\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT2)\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n/********************************************\r\n                  *8*8点阵*\r\n*********************************************/\r\nexport const basic_matrix_init = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_Matrix_init)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_matrix.png\"), 40, 40));\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//执行器_点阵屏显示_显示图案\r\nexport const basic_matrix1 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\").appendField(Blockly.Msg.MIXLY_basic_Matrix_custom).appendField(new Blockly.FieldImage(require(\"../media/basic_matrix.png\"), 40, 40));\r\n        this.appendValueInput(\"LEDArray\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_PICARRAY);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        //this.setTooltip();\r\n    }\r\n};\r\n//执行器_点阵屏显示_图案数组\r\nexport const basic_matrix2 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\").appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_ARRAYVAR).appendField(new Blockly.FieldTextInput(\"LedArray1\"), \"VAR\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a81\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a82\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a83\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a84\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a85\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a86\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a87\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a88\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a71\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a72\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a73\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a74\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a75\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a76\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a77\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a78\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a61\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a62\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a63\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a64\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a65\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a66\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a67\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a68\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a51\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a52\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a53\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a54\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a55\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a56\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a57\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a58\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a41\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a42\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a43\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a44\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a45\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a46\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a47\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a48\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a31\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a32\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a33\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a34\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a35\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a36\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a37\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a38\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a21\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a22\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a23\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a24\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a25\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a26\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a27\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a28\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a11\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a12\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a13\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a14\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a15\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a16\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a17\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a18\");\r\n        this.setOutput(true, Number);\r\n        //this.setTooltip();\r\n    }\r\n};\r\n\r\nexport const basic_matrix8 = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_basic_Matrix_char)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_matrix.png\"), 40, 40));\r\n        this.appendValueInput(\"num\")\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_basic_Matrix_dis);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const basic_matrix_clear = {\r\n    init: function () {\r\n        this.setColour(KIT_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(\"matrix8*8 清屏\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/basic_matrix.png\"), 40, 40));\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};","//////////////////LED灯////////////////\r\nexport const basic_led1 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const basic_led2 = basic_led1;\r\nexport const basic_led3 = basic_led1;\r\nexport const basic_led4 = basic_led1;\r\n\r\nexport const basic_a_Write = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var value_num = generator.valueToCode(this, 'NUM', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'analogWrite(' + dropdown_pin + ',' + value_num + ');\\n'\r\n    return code;\r\n};\r\n//////////////////////////RGB//////////////////////////////\r\nexport const basic_rgb01 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'R', generator.ORDER_ATOMIC);\r\n    var value_r = generator.valueToCode(this, 'r', generator.ORDER_ATOMIC);\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'G', generator.ORDER_ATOMIC);\r\n    var value_g = generator.valueToCode(this, 'g', generator.ORDER_ATOMIC);\r\n\r\n    var dropdown_pin3 = generator.valueToCode(this, 'B', generator.ORDER_ATOMIC);\r\n    var value_b = generator.valueToCode(this, 'b', generator.ORDER_ATOMIC);\r\n\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin3] = 'pinMode(' + dropdown_pin3 + ', OUTPUT);';\r\n\r\n    var code = 'analogWrite(' + dropdown_pin1 + ',' + value_r + ');\\nanalogWrite(' + dropdown_pin2 + ',' + value_g + ');\\nanalogWrite(' + dropdown_pin3 + ',' + value_b + ');\\n';\r\n    return code;\r\n};\r\n\r\n//////////////////////////有源蜂鸣器//////////////////////////////\r\n\r\nexport const basic_y_buzzer = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n//////////////////////////无源蜂鸣器//////////////////////////////\r\nexport const basic_w_buzzer1 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const basic_w_buzzer2 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\nexport const basic_w_buzzer3 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var dur = generator.valueToCode(this, 'DURATION',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \",\" + dur + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\n//////////////////////////电机//////////////////////////////\r\nexport const basic_motor = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\n//////////////////////////数字传感器////////////////////////////////\r\n\r\nexport const basic_button = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'digitalRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n/////////////////火焰传感器////////////////\r\nexport const basic_flame = basic_button;\r\n\r\n/////////////////倾斜传感器////////////////\r\nexport const basic_tilt = basic_button;\r\n\r\n\r\n//////////////////////模拟传感器/////////////////////////\r\n\r\nexport const basic_light = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'analogRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\nexport const basic_analog_t = basic_light;\r\n\r\nexport const basic_potentiometer = basic_light;\r\n\r\n\r\n//////////////////////////显示屏///////////////////\r\n\r\n\r\n\r\n///////////////////////////1位数码管/////////////////\r\nexport const basic_seg1 = function (_, generator) {\r\n    var num = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['abc'] = 'int a=7,b=6,c=5,d=10,e=11,f=8,g=9,dp=4;';\r\n    generator.definitions_['val3'] = 'int val=' + num + ';';\r\n\r\n    generator.definitions_['digital_0'] = 'void digital_0(void)\\n{\\nunsigned char j;\\ndigitalWrite(a,HIGH);\\ndigitalWrite(b,HIGH);\\ndigitalWrite(c,HIGH);\\ndigitalWrite(d,HIGH);\\ndigitalWrite(e,HIGH);\\ndigitalWrite(f,HIGH);\\ndigitalWrite(g,LOW);\\ndigitalWrite(dp,LOW);\\n}\\n';\r\n\r\n    generator.definitions_['digital_1'] = 'void digital_1(void)\\n{\\nunsigned char j;\\ndigitalWrite(c,HIGH);\\ndigitalWrite(b,HIGH);\\nfor(j=7;j<=11;j++)\\ndigitalWrite(j,LOW);\\ndigitalWrite(dp,LOW);\\n}\\n';\r\n    generator.definitions_['digital_2'] = 'void digital_2(void)\\n{\\nunsigned char j;\\ndigitalWrite(b,HIGH);\\ndigitalWrite(a,HIGH);\\nfor(j=9;j<=11;j++)\\ndigitalWrite(j,HIGH);\\ndigitalWrite(dp,LOW);\\ndigitalWrite(c,LOW);\\ndigitalWrite(f,LOW);\\n}\\n';\r\n    generator.definitions_['digital_3'] = 'void digital_3(void)\\n{digitalWrite(g,HIGH);\\ndigitalWrite(a,HIGH);\\ndigitalWrite(b,HIGH);\\ndigitalWrite(c,HIGH);\\ndigitalWrite(d,HIGH);\\ndigitalWrite(dp,LOW);\\ndigitalWrite(f,LOW);\\ndigitalWrite(e,LOW);\\n}\\n';\r\n    generator.definitions_['digital_4'] = 'void digital_4(void) \\n{digitalWrite(c,HIGH);\\ndigitalWrite(b,HIGH);\\ndigitalWrite(f,HIGH);\\ndigitalWrite(g,HIGH);\\ndigitalWrite(dp,LOW);\\ndigitalWrite(a,LOW);\\ndigitalWrite(e,LOW);\\ndigitalWrite(d,LOW);\\n}\\n';\r\n    generator.definitions_['digital_5'] = 'void digital_5(void)\\n{\\nunsigned char j;\\ndigitalWrite(a,HIGH);\\ndigitalWrite(b, LOW);\\ndigitalWrite(c,HIGH);\\ndigitalWrite(d,HIGH);\\ndigitalWrite(e, LOW);\\ndigitalWrite(f,HIGH);\\ndigitalWrite(g,HIGH);\\ndigitalWrite(dp,LOW);\\n}\\n';\r\n    generator.definitions_['digital_6'] = 'void digital_6(void) \\n{\\nunsigned char j;\\nfor(j=7;j<=11;j++)\\ndigitalWrite(j,HIGH);\\ndigitalWrite(c,HIGH);\\ndigitalWrite(dp,LOW);\\ndigitalWrite(b,LOW);\\n}\\n';\r\n    generator.definitions_['digital_7'] = 'void digital_7(void)\\n{\\nunsigned char j;\\nfor(j=5;j<=7;j++)\\ndigitalWrite(j,HIGH);\\ndigitalWrite(dp,LOW);\\nfor(j=8;j<=11;j++)\\ndigitalWrite(j,LOW);\\n}\\n';\r\n    generator.definitions_['digital_8'] = 'void digital_8(void)\\n{\\nunsigned char j;\\nfor(j=5;j<=11;j++)\\ndigitalWrite(j,HIGH);\\ndigitalWrite(dp,LOW);\\n}\\n';\r\n    generator.definitions_['digital_9'] = 'void digital_9(void)\\n{\\nunsigned char j;\\ndigitalWrite(a,HIGH);\\ndigitalWrite(b,HIGH);\\ndigitalWrite(c,HIGH);\\ndigitalWrite(d,HIGH);\\ndigitalWrite(e, LOW);\\ndigitalWrite(f,HIGH);\\ndigitalWrite(g,HIGH);\\ndigitalWrite(dp,LOW);\\n}\\n';\r\n\r\n    generator.setups_['setup_input'] = 'int i;\\nfor(i=4;i<=11;i++)\\npinMode(i,OUTPUT);\\n';\r\n\r\n    var code = 'switch(val)\\n  {\\n    case 0:digital_0();break;\\n    case 1:digital_1();break;\\n    case 2:digital_2();break;\\n    case 3:digital_3();break;\\n    case 4:digital_4();break;\\n    case 5:digital_5();break;\\n    case 6:digital_6();break;\\n    case 7:digital_7();break;\\n    case 8:digital_8();break;\\n   case 9:digital_9();break;\\n  }\\n';\r\n    return code;\r\n};\r\n\r\n///////////////////////////4位数码管/////////////////\r\nexport const basic_seg4 = function (_, generator) {\r\n    var num = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n    //var tc = generator.valueToCode(this, 'tc', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_SevSeg-master'] = '#include \"SevSeg.h\"';\r\n    generator.definitions_['sevseg'] = 'SevSeg sevseg;';\r\n    generator.definitions_['val4'] = 'int val=' + num + ';';\r\n    generator.definitions_['numDigits'] = 'byte numDigits = 4;';\r\n    generator.definitions_['digitPins'] = 'byte digitPins[] = {2, 3, 4, 5};';\r\n    generator.definitions_['segmentPins'] = 'byte segmentPins[] = {6, 7, 8, 9, 10, 11, 12, 13};';\r\n    generator.definitions_['hardwareConfig'] = 'byte hardwareConfig = COMMON_CATHODE ; ';\r\n\r\n    generator.setups_['setup_input'] = 'sevseg.begin(hardwareConfig, numDigits, digitPins, segmentPins);\\n';\r\n\r\n    var code = 'sevseg.setNumber(' + num + ', -1); \\nsevseg.refreshDisplay();\\n';\r\n    return code;\r\n};\r\n\r\n\r\n\r\n////////////////////////1602LCD///////////////////////////\r\nexport const basic_1602lcd = function (_, generator) {\r\n    var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC) || 'String(\"\")';\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || 'String(\"\")';\r\n\r\n\r\n    generator.definitions_['DRE'] = 'int DI = 12,RW = 11,Enable = 2;';\r\n    generator.definitions_['DB'] = 'int DB[] = {3, 4, 5, 6, 7, 8, 9, 10};';\r\n    generator.definitions_['STR'] = 'char *string = \"0\";';\r\n    generator.definitions_['LcdCommandWrite'] = 'void LcdCommandWrite(int value) \\n{\\nint i = 0;\\nfor (i=DB[0]; i <= DI; i++) \\n{\\ndigitalWrite(i,value & 01);\\nvalue >>= 1;\\n}\\ndigitalWrite(Enable,LOW);\\ndelayMicroseconds(1);\\ndigitalWrite(Enable,HIGH);\\ndelayMicroseconds(1); \\ndigitalWrite(Enable,LOW);\\ndelayMicroseconds(1); \\n}\\n';\r\n    generator.definitions_['LcdDataWrite'] = 'void LcdDataWrite(int value) \\n{\\nint i = 0;\\ndigitalWrite(DI, HIGH); \\ndigitalWrite(RW, LOW); \\nfor (i=DB[0]; i <= DB[7]; i++) \\n{\\ndigitalWrite(i,value & 01);\\nvalue >>= 1;\\n}\\ndigitalWrite(Enable,LOW);  \\ndelayMicroseconds(1);\\ndigitalWrite(Enable,HIGH); \\ndelayMicroseconds(1);\\ndigitalWrite(Enable,LOW); \\ndelayMicroseconds(1); \\n}\\n';\r\n    //generator.definitions_['LcdStringWrite'] = 'void LcdStringWrite(char *a)\\n{\\nfor(int i = 0;i < 14; i++)\\n{\\nif(*(a+i) == '\\0')\\n {\\nbreak;\\n}\\nLcdDataWrite(*(a+i));\\n}\\n}\\n';\r\n    generator.definitions_['lsw'] = 'void LcdStringWrite(char *a)\\n{\\nfor(int i = 0;i < strlen(a); i++){\\nLcdDataWrite(*(a+i));\\n}\\n}\\n';\r\n\r\n    generator.setups_['setup_lcd'] = 'int i = 0;\\nfor (i=Enable; i <= DI; i++) \\n{\\n    pinMode(i,OUTPUT);\\n}\\ndelay(100);\\nLcdCommandWrite(0x38);\\ndelay(64);  \\nLcdCommandWrite(0x38); \\ndelay(50);  \\nLcdCommandWrite(0x38); \\ndelay(20);  \\nLcdCommandWrite(0x06); \\ndelay(20);  \\nLcdCommandWrite(0x0E);\\ndelay(20);  \\nLcdCommandWrite(0x01);  \\ndelay(100); \\nLcdCommandWrite(0x80); \\ndelay(20);  \\n';\r\n\r\n    var code = 'LcdCommandWrite(0x01); \\ndelay(10); \\nLcdCommandWrite(0x80+0); \\ndelay(10); \\nstring = ' + str1 + ';\\nLcdStringWrite(string);\\ndelay(10);\\nLcdCommandWrite(0xc0+0); \\n string = ' + str2 + ';\\nLcdStringWrite(string);\\ndelay(10);\\ndelay(300);';\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////////////点阵////////////////////////////\r\nexport const basic_matrix_init = function (_, generator) {\r\n    generator.definitions_['matrix_var'] = 'unsigned char data_clear[]={0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\\n' +\r\n        'unsigned char data_0[]={0x00,0x38,0x44,0x44,0x44,0x44,0x38,0x00};\\n' +\r\n        'unsigned char data_1[]={0x38,0x10,0x10,0x10,0x10,0x10,0x30,0x10};\\n' +\r\n        'unsigned char data_2[]={0x7c,0x20,0x10,0x08,0x04,0x44,0x38,0x00};\\n' +\r\n        'unsigned char data_3[]={0x38,0x44,0x04,0x38,0x04,0x44,0x38,0x00};\\n' +\r\n        'unsigned char data_4[]={0x08,0x08,0x08,0x7e,0x48,0x28,0x10,0x08};\\n' +\r\n        'unsigned char data_5[]={0x00,0x78,0x04,0x04,0x78,0x40,0x7c,0x40};\\n' +\r\n        'unsigned char data_6[]={0x00,0x38,0x44,0x44,0x78,0x20,0x10,0x0c};\\n' +\r\n        'unsigned char data_7[]={0x00,0x20,0x20,0x10,0x08,0x04,0x7e,0x00};\\n' +\r\n        'unsigned char data_8[]={0x38,0x44,0x44,0x38,0x44,0x44,0x38,0x00};\\n' +\r\n        'unsigned char data_9[]={0x38,0x44,0x04,0x3c,0x44,0x44,0x38,0x00};';\r\n\r\n    generator.definitions_['DC'] = 'void clear_(void)\\n' +\r\n        '{\\n' +\r\n        '  for(int i=2;i<10;i++)\\n' +\r\n        '  digitalWrite(i, LOW);\\n' +\r\n        '  for(int i=0;i<8;i++)\\n' +\r\n        '  digitalWrite(i+10, HIGH);\\n' +\r\n        '}\\n';\r\n\r\n    generator.definitions_['DP'] = 'void Draw_point(unsigned char x,unsigned char y)\\n' +\r\n        '{\\n' +\r\n        '  clear_();\\n' +\r\n        '  digitalWrite(x+1, HIGH);\\n' +\r\n        '  digitalWrite(y+10, LOW);\\n' +\r\n        '  delay(1);\\n' +\r\n        '}\\n';\r\n\r\n    generator.definitions_['SN'] = 'void show_num(unsigned char matrix_data[])\\n' +\r\n        '{\\n' +\r\n        '  unsigned char i,j,data;\\n' +\r\n        '  for(i=8;i>0;i--)\\n' +\r\n        '  {\\n' +\r\n        '    data=matrix_data[i];\\n' +\r\n        '    for(j=8;j>0;j--)\\n' +\r\n        '    {\\n' +\r\n        '      if(data & 0x01)Draw_point(j,i);\\n' +\r\n        '      data>>=1;\\n' +\r\n        '    }\\n' +\r\n        '  }\\n' +\r\n        '}\\n';\r\n\r\n    generator.setups_['setup_matrix'] = 'for(int i=2;i<18;i++)\\n' +\r\n        '  {\\n' +\r\n        '    pinMode(i, OUTPUT);\\n' +\r\n        '  }\\n' +\r\n        '  clear_();\\n';\r\n\r\n    return '';\r\n};\r\n\r\nexport const basic_matrix8 = function (_, generator) {\r\n    var matrix_data = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n\r\n    return 'show_num(data_' + matrix_data + ');';\r\n};\r\n\r\n////////////////////////////////点阵1////////////////////////////\r\n//执行器_点阵屏显示_显示图案\r\nexport const basic_matrix1 = function (_, generator) {\r\n    var dotMatrixArray = generator.valueToCode(this, 'LEDArray', generator.ORDER_ASSIGNMENT);\r\n\r\n    return 'show_num(data_' + dotMatrixArray + ');';\r\n};\r\n//执行器_点阵屏显示_点阵数组\r\nexport const basic_matrix2 = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var a = new Array();\r\n    for (let i = 1; i < 9; i++) {\r\n        a[i] = new Array();\r\n        for (let j = 1; j < 9; j++) {\r\n            a[i][j] = (this.getFieldValue('a' + i + j) == \"TRUE\") ? 1 : 0;\r\n        }\r\n    }\r\n    var code = '{';\r\n    for (let i = 1; i < 9; i++) {\r\n        var tmp = \"\"\r\n        for (let j = 1; j < 9; j++) {\r\n            tmp += a[i][j];\r\n        }\r\n        tmp = (parseInt(tmp, 2)).toString(16)\r\n        if (tmp.length == 1) tmp = \"0\" + tmp;\r\n        code += '0x' + tmp + ((i != 8) ? ',' : '');\r\n    }\r\n    code += '};';\r\n    //generator.definitions_[this.id] = \"byte LedArray_\"+clearString(this.id)+\"[]=\"+code;\r\n    generator.definitions_[varName] = \"unsigned char data_\" + varName + \"[8]=\" + code;\r\n    //return [\"LedArray_\"+clearString(this.id), generator.ORDER_ATOMIC];\r\n    return [varName, generator.ORDER_ATOMIC];\r\n};\r\n\r\nexport const basic_matrix_clear = function () {\r\n    return 'clear_();';\r\n};","export const EnMsg = {};\r\n\r\nEnMsg.MIXLY_basic_LED1 = 'Blue_LED';\r\nEnMsg.MIXLY_basic_LED2 = 'Red_LED';\r\nEnMsg.MIXLY_basic_LED3 = 'Yellow_LED';\r\nEnMsg.MIXLY_basic_LED4 = 'Green_LED';\r\nEnMsg.MIXLY_basic_analog = 'analogWrite';\r\nEnMsg.MIXLY_basic_LED4 = 'Yellow_LED';\r\nEnMsg.MIXLY_basic_LED5 = 'Blue Piranha LED';\r\nEnMsg.MIXLY_basic_LED01 = 'Straw cap LED';\r\nEnMsg.MIXLY_basic_LED02 = 'Red Straw cap LED';\r\nEnMsg.MIXLY_basic_LED03 = 'Green Straw cap LED';\r\nEnMsg.MIXLY_basic_LED04 = 'Yellow straw cap LED';\r\nEnMsg.MIXLY_basic_LED05 = 'Blue Straw cap LED';\r\nEnMsg.MIXLY_basic_BUZZER1 = 'Active buzzer';\r\nEnMsg.MIXLY_basic_BUZZER2 = 'Passive Buzzer';\r\nEnMsg.MIXLY_basic_RELAY = 'Relay';\r\nEnMsg.MIXLY_basic_MOTOR = 'Motor';\r\nEnMsg.MIXLY_basic_SERVO = 'servo';\r\nEnMsg.MIXLY_basic_2812RGB = '2812RGB Module';\r\n\r\nEnMsg.MIXLY_basic_IR_G = 'PIR Module';\r\nEnMsg.MIXLY_basic_FLAME = 'Flame Sensor';\r\nEnMsg.MIXLY_basic_HALL = 'Hall Sensor';\r\nEnMsg.MIXLY_basic_CRASH = 'Crash Sensor';\r\nEnMsg.MIXLY_basic_BUTTON = 'Button switch';\r\nEnMsg.MIXLY_basic_TUOCH = 'Capacitive Touch';\r\nEnMsg.MIXLY_basic_KNOCK = 'Knock Module';\r\nEnMsg.MIXLY_basic_TILT = 'Tilt switch';\r\nEnMsg.MIXLY_basic_SHAKE = 'Vibration Module';\r\nEnMsg.MIXLY_basic_REED_S = 'Reed Switch Module';\r\nEnMsg.MIXLY_basic_TRACK = 'Tracking Module';\r\nEnMsg.MIXLY_basic_AVOID = 'Obstacle Avoidance Module';\r\nEnMsg.MIXLY_basic_LIGHT_B = 'Light Interrupt Module';\r\n\r\nEnMsg.MIXLY_basic_ANALOG_T = 'Analog Temperature Sensor';\r\nEnMsg.MIXLY_basic_SOUND = 'Sound Sensor';\r\nEnMsg.MIXLY_basic_LIGHT = 'Light Sensor';\r\nEnMsg.MIXLY_basic_WATER = 'Water Level Sensor';\r\nEnMsg.MIXLY_basic_SOIL = 'Soil Sensor';\r\nEnMsg.MIXLY_basic_POTENTIOMETER = 'potentiometer';\r\nEnMsg.MIXLY_basic_LM35 = 'LM35 Temperature Sensor';\r\nEnMsg.MIXLY_basic_SLIDE_POTENTIOMETER = 'slide potentiometer';\r\nEnMsg.MIXLY_basic_TEMT6000 = 'TEMT6000 Ambient Light';\r\nEnMsg.MIXLY_basic_STEAM = 'water vapor sensor';\r\nEnMsg.MIXLY_basic_FILM_P = 'Thin-film Pressure Sensor';\r\nEnMsg.MIXLY_basic_JOYSTICK = 'Joystick Module';\r\nEnMsg.MIXLY_basic_SMOKE = 'Smoke Sensor';\r\nEnMsg.MIXLY_basic_ALCOHOL = 'Alcohol Sensor';\r\nEnMsg.MIXLY_basic_MQ135 = 'MQ135 Air Quality';\r\nEnMsg.MIXLY_basic_18B20 = '18B20 Temperature Module';\r\nEnMsg.MIXLY_basic_RT = 'temperature';\r\n\r\nEnMsg.MIXLY_basic_DHT11 = 'temperature and humidity module';\r\nEnMsg.MIXLY_basic_BMP180 = 'BMP180 altimeter module';\r\nEnMsg.MIXLY_basic_T = 'temperature';\r\nEnMsg.MIXLY_basic_QY = 'barometric pressure';\r\nEnMsg.MIXLY_basic_H = 'altitude';\r\n\r\nEnMsg.MIXLY_basic_SR01 = 'SR01 Ultrasound Module';\r\nEnMsg.MIXLY_basic_3231 = 'DS3231 clock';\r\nEnMsg.MIXLY_basic_ADXL345 = 'Acceleration Module';\r\n\r\nEnMsg.MIXLY_basic_CARD1 = 'card1';\r\nEnMsg.MIXLY_basic_CARD2 = 'card2';\r\n\r\nEnMsg.MIXLY_basic_16button = '4*4button';\r\n\r\n\r\nEnMsg.MIXLY_basic_OLED = 'OLED Module';\r\nEnMsg.MIXLY_basic_1602LCD = 'IIC1602LCD';\r\nEnMsg.MIXLY_basic_2004LCD = 'IIC2004LCD';\r\nEnMsg.MIXLY_basic_MATRIX = '8*8 dot matrix';\r\nEnMsg.MIXLY_basic_TM1637 = '4 digit 8-segment LED digital';\r\nEnMsg.MIXLY_basic_SMG = '1 digit 8-segment LED digital';\r\nEnMsg.MIXLY_basic_ws = 'digit';\r\nEnMsg.MIXLY_basic_begin = 'Display position';\r\nEnMsg.MIXLY_basic_fill0 = 'add 0?';\r\nEnMsg.MIXLY_basic_light = 'Brightness0~7';\r\nEnMsg.MIXLY_basic_XY = 'Show or hide';\r\nEnMsg.MIXLY_basic_L = 'left';\r\nEnMsg.MIXLY_basic_R = 'right';\r\nEnMsg.MIXLY_basic_MH = 'colon';\r\nEnMsg.MIXLY_basic_one = 'print line1';\r\nEnMsg.MIXLY_basic_two = 'print line2';\r\nEnMsg.MIXLY_basic_three = 'print line3';\r\nEnMsg.MIXLY_basic_four = 'print line4';\r\n\r\n\r\nEnMsg.MIXLY_basic_value = 'value';\r\n\r\n\r\nEnMsg.MIXLY_basic_IR_E = 'Infrared Transmitter Module';\r\nEnMsg.MIXLY_basic_IR_R = 'Infrared Receiver Module';\r\nEnMsg.MIXLY_basic_W5100 = 'W5100 Ethernet Module';\r\nEnMsg.MIXLY_basic_BLUETOOTH = 'Bluetooth 2.0 Module';\r\nEnMsg.MIXLY_basic_rec = 'Received';\r\n\r\n\r\n//EnMsg.MIXLY_basic_kzsc = 'Control output';\r\n\r\nEnMsg.MIXLY_basic_Count = 'count';\r\n\r\nEnMsg.MIXLY_basic_Matrix_init = 'Matrix 8*8 Init';\r\nEnMsg.MIXLY_basic_Matrix_custom = 'Matrix custom display';\r\nEnMsg.MIXLY_basic_Matrix_char = 'Matrix Display a single character';\r\nEnMsg.MIXLY_basic_Matrix_dis = 'display';\r\n\r\nexport const EnCatgories = {};","export const ZhHansMsg = {};\r\n\r\nZhHansMsg.MIXLY_basic_LED1 = '蓝色LED';\r\nZhHansMsg.MIXLY_basic_LED2 = '红色LED';\r\nZhHansMsg.MIXLY_basic_LED3 = '黄色LED';\r\nZhHansMsg.MIXLY_basic_LED4 = '绿色LED';\r\nZhHansMsg.MIXLY_basic_analog = '模拟输出';\r\nZhHansMsg.MIXLY_basic_LED01 = '草帽LED';\r\nZhHansMsg.MIXLY_basic_LED02 = '红色草帽LED';\r\nZhHansMsg.MIXLY_basic_LED03 = '绿色草帽LED';\r\nZhHansMsg.MIXLY_basic_LED04 = '黄色草帽LED';\r\nZhHansMsg.MIXLY_basic_LED05 = '蓝色草帽LED';\r\nZhHansMsg.MIXLY_basic_BUZZER1 = '有源蜂鸣器';\r\nZhHansMsg.MIXLY_basic_BUZZER2 = '无源蜂鸣器';\r\nZhHansMsg.MIXLY_basic_RELAY = '继电器';\r\nZhHansMsg.MIXLY_basic_MOTOR = '电机风扇';\r\nZhHansMsg.MIXLY_basic_SERVO = '舵机';\r\nZhHansMsg.MIXLY_basic_2812RGB = '2812RGB模块';\r\n\r\nZhHansMsg.MIXLY_basic_IR_G = '人体红外热模块';\r\nZhHansMsg.MIXLY_basic_FLAME = '火焰传感器';\r\nZhHansMsg.MIXLY_basic_HALL = '霍尔传感器';\r\nZhHansMsg.MIXLY_basic_CRASH = '碰撞传感器';\r\nZhHansMsg.MIXLY_basic_BUTTON = '按键';\r\nZhHansMsg.MIXLY_basic_TUOCH = '电容触摸';\r\nZhHansMsg.MIXLY_basic_KNOCK = '敲击模块';\r\nZhHansMsg.MIXLY_basic_TILT = '倾斜模块';\r\nZhHansMsg.MIXLY_basic_SHAKE = '振动模块';\r\nZhHansMsg.MIXLY_basic_REED_S = '干簧管模块';\r\nZhHansMsg.MIXLY_basic_TRACK = '循迹模块';\r\nZhHansMsg.MIXLY_basic_AVOID = '避障模块';\r\nZhHansMsg.MIXLY_basic_LIGHT_B = '光折断模块';\r\n\r\nZhHansMsg.MIXLY_basic_ANALOG_T = '模拟温度传感器';\r\nZhHansMsg.MIXLY_basic_SOUND = '声音传感器';\r\nZhHansMsg.MIXLY_basic_LIGHT = '光线传感器';\r\nZhHansMsg.MIXLY_basic_WATER = '水位传感器';\r\nZhHansMsg.MIXLY_basic_SOIL = '土壤传感器';\r\nZhHansMsg.MIXLY_basic_POTENTIOMETER = '电位器';\r\nZhHansMsg.MIXLY_basic_LM35 = 'LM35温度传感器';\r\nZhHansMsg.MIXLY_basic_SLIDE_POTENTIOMETER = '滑动电位器';\r\nZhHansMsg.MIXLY_basic_TEMT6000 = 'TEMT6000环境光';\r\nZhHansMsg.MIXLY_basic_STEAM = '水蒸气传感器';\r\nZhHansMsg.MIXLY_basic_FILM_P = '薄膜压力传感器';\r\nZhHansMsg.MIXLY_basic_JOYSTICK = '遥杆模块';\r\nZhHansMsg.MIXLY_basic_SMOKE = '烟雾传感器';\r\nZhHansMsg.MIXLY_basic_ALCOHOL = '酒精传感器';\r\nZhHansMsg.MIXLY_basic_MQ135 = 'MQ135空气质量';\r\n\r\nZhHansMsg.MIXLY_basic_18B20 = '18B20温度模块';\r\nZhHansMsg.MIXLY_basic_RT = '温度';\r\n\r\nZhHansMsg.MIXLY_basic_DHT11 = '温湿度模块';\r\nZhHansMsg.MIXLY_basic_BMP180 = 'BMP180高度计模块';\r\nZhHansMsg.MIXLY_basic_T = '温度';\r\nZhHansMsg.MIXLY_basic_QY = '大气压';\r\nZhHansMsg.MIXLY_basic_H = '高度';\r\n\r\nZhHansMsg.MIXLY_basic_SR01 = 'SR01超声波模块';\r\nZhHansMsg.MIXLY_basic_3231 = 'DS3231时钟';\r\nZhHansMsg.MIXLY_basic_ADXL345 = '加速度模块';\r\n\r\nZhHansMsg.MIXLY_basic_YEAR = '年';\r\nZhHansMsg.MIXLY_basic_MONTH = '月';\r\nZhHansMsg.MIXLY_basic_DAY = '天';\r\nZhHansMsg.MIXLY_basic_TEXT = '周';\r\nZhHansMsg.MIXLY_basic_HOUR = '时';\r\nZhHansMsg.MIXLY_basic_MINUTE = '分';\r\nZhHansMsg.MIXLY_basic_SECOND = '秒';\r\nZhHansMsg.MIXLY_basic_GET = '获取时间';\r\n\r\nZhHansMsg.MIXLY_basic_CARD1 = '卡1';\r\nZhHansMsg.MIXLY_basic_CARD2 = '卡2';\r\n\r\nZhHansMsg.MIXLY_basic_16button = '4*4按钮键盘';\r\n\r\n\r\nZhHansMsg.MIXLY_basic_OLED = 'OLED模块';\r\nZhHansMsg.MIXLY_basic_1602LCD = 'IIC1602LCD';\r\nZhHansMsg.MIXLY_basic_2004LCD = 'IIC2004LCD';\r\nZhHansMsg.MIXLY_basic_MATRIX = '8*8点阵';\r\nZhHansMsg.MIXLY_basic_TM1637 = '4位8段数码管';\r\nZhHansMsg.MIXLY_basic_SMG = '1位8段数码管';\r\nZhHansMsg.MIXLY_basic_ws = '位数';\r\nZhHansMsg.MIXLY_basic_begin = '显示的位置';\r\nZhHansMsg.MIXLY_basic_fill0 = '是否补充0';\r\nZhHansMsg.MIXLY_basic_light = '亮度0~7';\r\nZhHansMsg.MIXLY_basic_XY = '显或隐';\r\nZhHansMsg.MIXLY_basic_L = '左边';\r\nZhHansMsg.MIXLY_basic_R = '右边';\r\nZhHansMsg.MIXLY_basic_MH = '冒号';\r\nZhHansMsg.MIXLY_basic_one = '第一行';\r\nZhHansMsg.MIXLY_basic_two = '第二行';\r\nZhHansMsg.MIXLY_basic_three = '第三行';\r\nZhHansMsg.MIXLY_basic_four = '第四行';\r\n\r\nZhHansMsg.MIXLY_basic_value = '数值';\r\n\r\nZhHansMsg.MIXLY_basic_IR_E = '红外发射模块';\r\nZhHansMsg.MIXLY_basic_IR_R = '红外接收模块';\r\nZhHansMsg.MIXLY_basic_W5100 = 'W5100以太网模块';\r\nZhHansMsg.MIXLY_basic_BLUETOOTH = '蓝牙2.0模块';\r\nZhHansMsg.MIXLY_basic_rec = '接收到的信号';\r\n\r\nZhHansMsg.MIXLY_basic_kzsc = '控制输出';\r\n\r\nZhHansMsg.MIXLY_basic_Count = '灯号';\r\n\r\nZhHansMsg.MIXLY_basic_Matrix_init = '8*8点阵初始化';\r\nZhHansMsg.MIXLY_basic_Matrix_custom = '8*8点阵自定义显示';\r\nZhHansMsg.MIXLY_basic_Matrix_char = '8*8点阵显示单个字符';\r\nZhHansMsg.MIXLY_basic_Matrix_dis = '显示';\r\n\r\nexport const ZhHansCatgories = {};","export const ZhHantMsg = {};\r\n\r\nZhHantMsg.MIXLY_basic_LED1 = '蓝色LED';\r\nZhHantMsg.MIXLY_basic_LED2 = '红色LED';\r\nZhHantMsg.MIXLY_basic_LED3 = '黄色LED';\r\nZhHantMsg.MIXLY_basic_LED4 = '绿色LED';\r\nZhHantMsg.MIXLY_basic_analog = '模拟输出';\r\nZhHantMsg.MIXLY_basic_LED4 = '黃色食人魚LED';\r\nZhHantMsg.MIXLY_basic_LED5 = '藍色食人魚LED';\r\nZhHantMsg.MIXLY_basic_LED01 = '草帽LED';\r\nZhHantMsg.MIXLY_basic_LED02 = '紅色草帽LED';\r\nZhHantMsg.MIXLY_basic_LED03 = '綠色草帽LED';\r\nZhHantMsg.MIXLY_basic_LED04 = '黃色草帽LED';\r\nZhHantMsg.MIXLY_basic_LED05 = '藍色草帽LED';\r\nZhHantMsg.MIXLY_basic_BUZZER1 = '有源蜂鳴器';\r\nZhHantMsg.MIXLY_basic_BUZZER2 = '無源蜂鳴器';\r\nZhHantMsg.MIXLY_basic_RELAY = '繼電器';\r\nZhHantMsg.MIXLY_basic_MOTOR = '電機';\r\nZhHantMsg.MIXLY_basic_SERVO = '舵機';\r\nZhHantMsg.MIXLY_basic_2812RGB = '2812RGB模塊';\r\n\r\nZhHantMsg.MIXLY_basic_IR_G = '人體紅外熱模塊';\r\nZhHantMsg.MIXLY_basic_FLAME = '火焰傳感器';\r\nZhHantMsg.MIXLY_basic_HALL = '霍爾傳感器';\r\nZhHantMsg.MIXLY_basic_CRASH = '碰撞傳感器';\r\nZhHantMsg.MIXLY_basic_BUTTON = '按鍵';\r\nZhHantMsg.MIXLY_basic_TUOCH = '電容觸摸';\r\nZhHantMsg.MIXLY_basic_KNOCK = '敲擊模塊';\r\nZhHantMsg.MIXLY_basic_TILT = '傾斜模塊';\r\nZhHantMsg.MIXLY_basic_SHAKE = '振動模塊';\r\nZhHantMsg.MIXLY_basic_REED_S = '幹簧管模塊';\r\nZhHantMsg.MIXLY_basic_TRACK = '循跡模塊';\r\nZhHantMsg.MIXLY_basic_AVOID = '避障模塊';\r\nZhHantMsg.MIXLY_basic_LIGHT_B = '光折斷模塊';\r\n\r\nZhHantMsg.MIXLY_basic_ANALOG_T = '模擬溫度傳感器';\r\nZhHantMsg.MIXLY_basic_SOUND = '聲音傳感器';\r\nZhHantMsg.MIXLY_basic_LIGHT = '光線傳感器';\r\nZhHantMsg.MIXLY_basic_WATER = '水位傳感器';\r\nZhHantMsg.MIXLY_basic_SOIL = '土壤傳感器';\r\nZhHantMsg.MIXLY_basic_POTENTIOMETER = '電位器';\r\nZhHantMsg.MIXLY_basic_LM35 = 'LM35溫度傳感器';\r\nZhHantMsg.MIXLY_basic_SLIDE_POTENTIOMETER = '滑動電位器';\r\nZhHantMsg.MIXLY_basic_TEMT6000 = 'TEMT6000環境光';\r\nZhHantMsg.MIXLY_basic_STEAM = '水蒸氣傳感器';\r\nZhHantMsg.MIXLY_basic_FILM_P = '薄膜壓力傳感器';\r\nZhHantMsg.MIXLY_basic_JOYSTICK = '遙桿模塊';\r\nZhHantMsg.MIXLY_basic_SMOKE = '煙霧傳感器';\r\nZhHantMsg.MIXLY_basic_ALCOHOL = '酒精傳感器';\r\nZhHantMsg.MIXLY_basic_MQ135 = 'MQ135空氣質量';\r\nZhHantMsg.MIXLY_basic_18B20 = '18B20溫度模塊';\r\nZhHantMsg.MIXLY_basic_RT = '获取温度';\r\n\r\nZhHantMsg.MIXLY_basic_DHT11 = '溫濕度模塊';\r\nZhHantMsg.MIXLY_basic_BMP180 = 'BMP180高度計模塊';\r\nZhHantMsg.MIXLY_basic_T = '温度';\r\nZhHantMsg.MIXLY_basic_QY = '大气压';\r\nZhHantMsg.MIXLY_basic_H = '高度';\r\n\r\nZhHantMsg.MIXLY_basic_SR01 = 'SR01超聲波模塊';\r\nZhHantMsg.MIXLY_basic_3231 = '3231時鐘';\r\nZhHantMsg.MIXLY_basic_ADXL345 = '加速度模塊';\r\n\r\nZhHantMsg.MIXLY_basic_CARD1 = '卡1';\r\nZhHantMsg.MIXLY_basic_CARD2 = '卡2';\r\n\r\nZhHantMsg.MIXLY_basic_16button = '4*4按钮键盘';\r\n\r\n\r\nZhHantMsg.MIXLY_basic_OLED = 'OLED模塊';\r\nZhHantMsg.MIXLY_basic_1602LCD = 'IIC1602LCD';\r\nZhHantMsg.MIXLY_basic_2004LCD = 'IIC2004LCD';\r\nZhHantMsg.MIXLY_basic_MATRIX = '8*8點陣';\r\n\r\nZhHantMsg.MIXLY_basic_TM1637 = '4位8段數碼管';\r\nZhHantMsg.MIXLY_basic_SMG = '1位8段数码管';\r\nZhHantMsg.MIXLY_basic_ws = '位数';\r\nZhHantMsg.MIXLY_basic_value = '数值';\r\nZhHantMsg.MIXLY_basic_begin = '显示的位置';\r\nZhHantMsg.MIXLY_basic_fill0 = '是否补充0';\r\nZhHantMsg.MIXLY_basic_light = '亮度0~7';\r\nZhHantMsg.MIXLY_basic_XY = '显或隐';\r\nZhHantMsg.MIXLY_basic_L = '左边';\r\nZhHantMsg.MIXLY_basic_R = '右边';\r\nZhHantMsg.MIXLY_basic_MH = '冒号';\r\nZhHantMsg.MIXLY_basic_one = '第一行';\r\nZhHantMsg.MIXLY_basic_two = '第二行';\r\nZhHantMsg.MIXLY_basic_three = '第三行';\r\nZhHantMsg.MIXLY_basic_four = '第四行';\r\n\r\n\r\nZhHantMsg.MIXLY_basic_IR_E = '紅外發射模塊';\r\nZhHantMsg.MIXLY_basic_IR_R = '紅外接收模塊';\r\nZhHantMsg.MIXLY_basic_W5100 = 'W5100以太網模塊';\r\nZhHantMsg.MIXLY_basic_BLUETOOTH = '藍牙2.0模塊';\r\nZhHantMsg.MIXLY_basic_rec = '接收到的信号';\r\n\r\nZhHantMsg.MIXLY_basic_Count = '灯号';\r\n\r\nZhHantMsg.MIXLY_basic_Matrix_init = '8*8点阵初始化';\r\nZhHantMsg.MIXLY_basic_Matrix_custom = '点阵自定义显示';\r\nZhHantMsg.MIXLY_basic_Matrix_char = '8*8点阵显示单个字符';\r\nZhHantMsg.MIXLY_basic_Matrix_dis = '显示';\r\n\r\nexport const ZhHantCatgories = {};","module.exports = Blockly;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import * as Blockly from 'blockly/core';\r\nimport { ZhHansMsg, ZhHansCatgories } from './language/zh-hans';\r\nimport { ZhHantMsg, ZhHantCatgories } from './language/zh-hant';\r\nimport { EnMsg, EnCatgories } from './language/en';\r\nimport * as generators from './generators/generator';\r\nimport * as blocks from './blocks/block';\r\n\r\n// 载入语言文件\r\nObject.assign(Blockly.Lang.ZhHans, ZhHansMsg);\r\nObject.assign(Blockly.Lang.ZhHant, ZhHantMsg);\r\nObject.assign(Blockly.Lang.En, EnMsg);\r\nObject.assign(Blockly.Lang.ZhHans.MSG, ZhHansCatgories);\r\nObject.assign(Blockly.Lang.ZhHant.MSG, ZhHantCatgories);\r\nObject.assign(Blockly.Lang.En.MSG, EnCatgories);\r\n\r\n// 载入图形化模块外观定义文件\r\nObject.assign(Blockly.Blocks, blocks);\r\n\r\n// 载入图形化模块代码生成定义文件\r\nObject.assign(Blockly.Arduino.forBlock, generators);"],"names":[],"sourceRoot":""}